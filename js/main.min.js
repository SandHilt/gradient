"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var isGradient = document.body.parentNode.classList.contains("cssgradients") | false;
var lastColor = null;
var lock = false;

var Color = function () {
    function Color() {
        _classCallCheck(this, Color);

        this.r = Math.floor(Math.random() * 255);
        this.g = Math.floor(Math.random() * 255);
        this.b = Math.floor(Math.random() * 255);
    }

    _createClass(Color, [{
        key: "compareColor",
        value: function compareColor(color) {
            if (this.r == color.r && this.g == color.g && this.b == color.b) {
                return true;
            }

            return false;
        }
    }, {
        key: "showColor",
        value: function showColor() {
            return "rgb(" + this.r + "," + this.g + "," + this.b + ")";
        }
    }]);

    return Color;
}();

/**
 * Se não houver a opção de Gradiente no CSS,
 * ele utilizará apenas cor.
 */


if (!isGradient) {
    document.body.addEventListener("click", function () {
        if (!lastColor) {
            lastColor = {};
            lastColor.cor = new Color();
        } else {
            while (true) {
                var temp = new Color();
                if (!temp.compareColor(lastColor.cor)) {
                    lastColor.cor = temp;
                    break;
                }
            }
        }

        document.body.style.background = lastColor.cor.showColor();
    }, false);
    /**
     * Caso contrário, trabalhará com Gradiente de duas cores.
     */
} else {
        document.body.addEventListener("click", function () {
            var pos = ["top", "right", "bottom", "left", "deg"];
            var getPos = function getPos() {
                return Math.floor(Math.random() * pos.length);
            };

            var main = getPos();
            var aux = pos[main];
            pos[main] = "";

            if (aux !== "deg") {
                main = "to " + aux;
                aux = " " + pos[getPos()];
            } else {
                main = Math.floor(Math.random() * 360) + "deg";
                aux = "";
            }

            /**
             * Se a cor do gradiente não foi definida,
             * então ele criará um vetor de cores
             */
            if (!lastColor) {
                lastColor = {};
                lastColor.cor = new Map([["primary", new Color()], ["secondary", new Color()]]);
            } else {
                while (true) {
                    var primary = new Color();
                    var secondary = new Color();

                    if (!primary.compareColor(lastColor.cor.get("primary")) && !secondary.compareColor(lastColor.cor.get("secondary"))) {
                        lastColor.cor.set("primary", primary);
                        lastColor.cor.set("secondary", secondary);
                        break;
                    }
                }
            }

            var cor1 = lastColor.cor.get("primary").showColor();
            var cor2 = lastColor.cor.get("secondary").showColor();

            // console.log(`cor1: ${cor1}, cor2: ${cor2}`);

            /**
             * Promessa para ver se o DOM não está
             * alterando asyncronamente
             */
            var promise = new Promise(function (r, j) {
                if (!lock) {
                    lock = true;
                    r();
                } else {
                    j();
                }
            });

            promise.then(function (r) {
                document.body.style.background = "linear-gradient(" + main + aux + ", " + cor1 + ", " + cor2 + ")";
                lock = false;
            }, function (j) {
                console.log("Sorry - " + new Date());
            });

            // document.body.style.background = `linear-gradient(${main}${aux}, ${cor1}, ${cor2})`;
        }, false);
    }
